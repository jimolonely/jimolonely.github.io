<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on 孤独的寂寞</title><link>https://jimolonely.github.io/tags/java/</link><description>Recent content in java on 孤独的寂寞</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 20 May 2022 22:51:28 +0800</lastBuildDate><atom:link href="https://jimolonely.github.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Java instanceof List&lt;T></title><link>https://jimolonely.github.io/posts/java/java-instanceof-list/</link><pubDate>Fri, 20 May 2022 22:51:28 +0800</pubDate><guid>https://jimolonely.github.io/posts/java/java-instanceof-list/</guid><description>其实这是一个很简单的问题，在Java中，通常我们要判断一个对象是不是某种类型，会用 instanceof 关键字。
但遇到带有泛型的 List&amp;lt;T&amp;gt; 是不能直接使用，这时候怎么办呢？
我会写出下面的代码：
if(a instanceof A){ A a1 = (A)a; } if(a instanceof List &amp;amp;&amp;amp; !((List&amp;lt;?&amp;gt;)a).isEmpty() &amp;amp;&amp;amp; ((List&amp;lt;?&amp;gt;)a).get(0) instanceof A){ List&amp;lt;A&amp;gt; list = (List&amp;lt;A&amp;gt;)a; } 没问题，就是会有警告，而且这种方式在List没有元素时就不行.
另外一种方式侵入性较高，就是对List进行继承，确定一个泛型：
public class ListA extends ArrayList&amp;lt;A&amp;gt; { } ListA listA = new ListA(); listA.add(new A()); assert listA instanceof ListA; 目前还没想到更好的办法，欢迎补充。</description></item><item><title>Java Agent如何调试</title><link>https://jimolonely.github.io/posts/java/java-agent/</link><pubDate>Sat, 14 May 2022 06:51:46 +0800</pubDate><guid>https://jimolonely.github.io/posts/java/java-agent/</guid><description> 通过Java Agent，可以无侵入性地增强代码功能，或者拦截代码做一些统计。
比如，在监控系统里，采集应用端的各种代码执行情况就是使用 agent，典型的开源项目 pinpoint.
其最基本使用是通过命令行参数-javaagent:xxx-agent.jar指定:
$ java -jar -javaagent:pinpoint-agent.jar testapp.jar 而在开发过程中，用打日志的方式显然不好调试，所以测试了下在IDEA里，这种agent也是可以debug的。
准备测试项目 TODO
在IDEA里如何调试 代码在同一个项目里 安装agent debug 修改代码后</description></item></channel></rss>