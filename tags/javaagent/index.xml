<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javaagent on 孤独的寂寞</title><link>https://jimolonely.github.io/tags/javaagent/</link><description>Recent content in javaagent on 孤独的寂寞</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 14 May 2022 06:51:46 +0800</lastBuildDate><atom:link href="https://jimolonely.github.io/tags/javaagent/index.xml" rel="self" type="application/rss+xml"/><item><title>Java Agent如何调试</title><link>https://jimolonely.github.io/posts/java/java-agent/</link><pubDate>Sat, 14 May 2022 06:51:46 +0800</pubDate><guid>https://jimolonely.github.io/posts/java/java-agent/</guid><description>做agent开发必备调试技巧：如何在IDEA里debug agent代码。
我们知道，agent一般是增强代码功能，常用的方式就是提供一个agent的jar包，应用通过 -javaagent:xxx-agent.jar这样启动。
java -javaagent:D:\agent\aweson-agent.jar -jar app.jar 使用起来简单，但开发起来就会遇到一个问题：如何调试？
总不能靠输入输出吧，当然不需要，比较IDEA还是很强大的。
先写一个简单的agent 建一个子模块 method-agent，这很重要。
我们以一个例子来演示：agent拦截类的方法，前后加入一句开始结束输出。
通过maven插件生成 MANIFEST.MF 的定义：
&amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-shade-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;shade&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;transformers&amp;gt; &amp;lt;transformer implementation=&amp;#34;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&amp;#34;&amp;gt; &amp;lt;manifestEntries&amp;gt; &amp;lt;Premain-Class&amp;gt;com.jimo.MethodAgent&amp;lt;/Premain-Class&amp;gt; &amp;lt;!-- &amp;lt;Agent-Class&amp;gt;com.jimo.MethodAgent&amp;lt;/Agent-Class&amp;gt;--&amp;gt; &amp;lt;Can-Redefine-Classes&amp;gt;true&amp;lt;/Can-Redefine-Classes&amp;gt; &amp;lt;/manifestEntries&amp;gt; &amp;lt;/transformer&amp;gt; &amp;lt;/transformers&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt; 我们只拦截自己写的类, 这里用到了 javassist 来增强类。
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.javassist&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;javassist&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.29.0-GA&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; import javassist.*; import java.io.IOException; import java.lang.instrument.Instrumentation; public class MethodAgent { public static void premain(String agentArgs, Instrumentation inst) { System.</description></item></channel></rss>